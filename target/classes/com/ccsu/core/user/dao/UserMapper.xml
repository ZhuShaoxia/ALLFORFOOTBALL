<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.ccsu.core.user.dao.UserMapper">
    <resultMap id="UserMap" type="User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="account" property="account" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="role" property="role" jdbcType="INTEGER"/>
        <result column="imgUrl" property="imgUrl" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="INTEGER"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="profile" property="profile" jdbcType="VARCHAR"/>
        <result column="gmt_create" property="createTime" jdbcType="VARCHAR"/>
        <result column="gmt_modified" property="modifiedTime" jdbcType="VARCHAR"/>

        <result column="clubId" property="club.id" jdbcType="INTEGER"/>
        <result column="countryId" property="club.country.id" jdbcType="INTEGER"/>
        <result column="clubName" property="club.name" jdbcType="VARCHAR"/>
        <result column="otherClubName" property="otherClubName" jdbcType="VARCHAR"/>
    </resultMap>

    <insert id="save" parameterType="User" useGeneratedKeys="true">
        INSERT INTO tb_user (clubId, otherClubName, name, nickname, account, password, imgUrl, email, phone, role,
        profile, gmt_create,
        gmt_modified)
        VALUES
        (#{club.id}, #{otherClubName}, #{name}, #{nickname}, #{account}, #{password}, #{imgUrl}, #{email}, #{phone},
        #{role},
        #{profile}, #{createTime},
        #{modifiedTime})
    </insert>

    <!--删除用户-->
    <delete id="delete" parameterType="Integer">
        delete from tb_user
        where id = #{id}
    </delete>

    <!--根据用户编号查询用户基本信息-->
    <select id="findById" resultMap="UserMap" parameterType="Integer">
        SELECT
        a.id id,
        a.name name,
        a.nickname nickname,
        a.account account,
        a.password password,
        a.role role,
        a.imgUrl imgUrl,
        a.sex sex,
        a.email email,
        a.phone phone,
        b.id clubId,
        b.name clubName,
        b.countryId countryId,
        a.otherClubName otherClubName,
        a.profile profile,
        a.gmt_create gmt_create,
        a.gmt_modified gmt_modified
        FROM tb_user a
        left join tb_club b
        on a.clubId = b.id
        WHERE a.id = #{a.id}
    </select>

    <!--更新用户信息 -->
    <update id="update" parameterType="User">
        UPDATE TB_USER
        SET name = #{name},
        nickname = #{nickname},
        account = #{account},
        password = #{password},
        role = #{role},
        imgUrl = #{imgUrl},
        sex = #{sex},
        email = #{email},
        phone = #{phone},
        profile = #{profile},
        gmt_modified = #{modifiedTime},
        clubId = #{club.id},
        otherClubName = #{otherClubName}
        WHERE id = #{id}
    </update>

    <!--查询所有用户-->
    <select id="findAll" resultMap="UserMap" parameterType="String">
        SELECT
        a.id id,
        a.name name,
        a.nickname nickname,
        a.account account,
        a.password password,
        a.role role,
        a.imgUrl imgUrl,
        a.sex sex,
        a.email email,
        a.phone phone,
        b.id clubId,
        b.name clubName,
        b.countryId countryId,
        a.otherClubName otherClubName,
        a.profile profile,
        a.gmt_create gmt_create,
        a.gmt_modified gmt_modified
        FROM tb_user a
        LEFT JOIN tb_club b
        ON a.clubId = b.id
        <where>
            <if test="_parameter!=null">
                and (a.name LIKE "%"#{_parameter}"%" or a.nickname LIKE "%"#{_parameter}"%" or a.account LIKE
                "%"#{_parameter}"%" or a.email LIKE "%"#{_parameter}"%" or a.phone LIKE "%"#{_parameter}"%")
            </if>
        </where>
    </select>

    <!--验证账号是否存在-->
    <select id="verifyAccount" resultType="Integer" parameterType="String">
        SELECT count(account)
        FROM tb_user
        where account = #{account}
    </select>

    <!--验证昵称是否存在-->
    <select id="verifyNickname" resultType="Integer" parameterType="String">
        SELECT count(nickname)
        FROM tb_user
        where nickname = #{nickname}
    </select>

    <!--验证手机号是否存在-->
    <select id="verifyPhone" resultType="Integer" parameterType="String">
        SELECT count(phone)
        FROM tb_user
        where phone = #{phone}
    </select>

    <!--验证邮箱是否存在-->
    <select id="verifyEmail" resultType="Integer" parameterType="String">
        SELECT count(email)
        FROM tb_user
        where email = #{email}
    </select>

    <!--验证密码是否正确-->
    <select id="verifyPassword" resultType="Integer">
        SELECT count(password)
        FROM tb_user
        where id = #{0} AND password = #{1}
    </select>

    <!--验证用户登录-->
    <select id="userLogin" resultMap="UserMap" parameterType="User">
        SELECT
        a.id id,
        a.name name,
        a.nickname nickname,
        a.account account,
        a.password password,
        a.role role,
        a.imgUrl imgUrl,
        a.sex sex,
        a.email email,
        a.phone phone,
        b.id clubId,
        b.name clubName,
        b.countryId countryId,
        a.otherClubName otherClubName,
        a.profile profile,
        a.gmt_create gmt_create,
        a.gmt_modified gmt_modified
        FROM tb_user a
        left join tb_club b
        on a.clubId = b.id
        <where>
            a.password =#{password} AND (a.account = #{account} or a.phone =#{account} or
            a.email=#{account} )
            <if test="role!=null">
                AND a.role = #{role}
            </if>
        </where>

    </select>


    <!--修改用户密码-->
    <update id="updateUserPwd" parameterType="User">
        update tb_user
        set password = #{password},
        gmt_modified = #{modifiedTime}
        <where>
            <if test="id!=null">
                AND id = ${id}
            </if>
            <if test="account!=null">
                OR (account = #{account} or phone =#{account} or
                email=#{account})
            </if>
        </where>
    </update>


    <update id="updateUserPhone" parameterType="User">
        update tb_user
        set phone = #{phone},
        gmt_modified = #{modifiedTime}
        where id = #{id}
    </update>

</mapper>